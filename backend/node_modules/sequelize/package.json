{
  "_args": [
    [
      "sequelize@^6.5.0",
      "/home/ubuntu/server"
    ]
  ],
  "_from": "sequelize@>=6.5.0 <7.0.0",
  "_hasShrinkwrap": false,
  "_id": "sequelize@6.5.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/sequelize",
  "_nodeVersion": "12.20.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sequelize_6.5.0_1611720425737_0.15406292927355913"
  },
  "_npmUser": {
    "email": "papb1996@gmail.com",
    "name": "papb"
  },
  "_npmVersion": "6.14.11",
  "_phantomChildren": {},
  "_requested": {
    "name": "sequelize",
    "raw": "sequelize@^6.5.0",
    "rawSpec": "^6.5.0",
    "scope": null,
    "spec": ">=6.5.0 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sequelize/-/sequelize-6.5.0.tgz",
  "_shasum": "c968a03f6fbbcda40717f73edb39fadf27b85e96",
  "_shrinkwrap": null,
  "_spec": "sequelize@^6.5.0",
  "_where": "/home/ubuntu/server",
  "bugs": {
    "url": "https://github.com/sequelize/sequelize/issues"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-angular"
    ]
  },
  "dependencies": {
    "debug": "^4.1.1",
    "dottie": "^2.0.0",
    "inflection": "1.12.0",
    "lodash": "^4.17.20",
    "moment": "^2.26.0",
    "moment-timezone": "^0.5.31",
    "retry-as-promised": "^3.2.0",
    "semver": "^7.3.2",
    "sequelize-pool": "^6.0.0",
    "toposort-class": "^1.0.1",
    "uuid": "^8.1.0",
    "validator": "^10.11.0",
    "wkx": "^0.5.0"
  },
  "description": "Multi dialect ORM for Node.JS",
  "devDependencies": {
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-angular": "^11.0.0",
    "@types/node": "^12.12.42",
    "@types/validator": "^10.11.0",
    "acorn": "^8.0.4",
    "chai": "^4.x",
    "chai-as-promised": "^7.x",
    "chai-datetime": "^1.6.0",
    "cheerio": "^1.0.0-rc.3",
    "cls-hooked": "^4.2.2",
    "cross-env": "^7.0.2",
    "delay": "^4.3.0",
    "env-cmd": "^10.1.0",
    "esdoc": "^1.1.0",
    "esdoc-ecmascript-proposal-plugin": "^1.0.0",
    "esdoc-inject-style-plugin": "^1.0.0",
    "esdoc-standard-plugin": "^1.0.0",
    "eslint": "^6.8.0",
    "eslint-plugin-jsdoc": "^20.4.0",
    "eslint-plugin-mocha": "^6.2.2",
    "expect-type": "^0.11.0",
    "fs-jetpack": "^4.1.0",
    "husky": "^4.2.5",
    "js-combinatorics": "^0.5.5",
    "lcov-result-merger": "^3.0.0",
    "lint-staged": "^10.2.6",
    "mariadb": "^2.3.1",
    "markdownlint-cli": "^0.26.0",
    "marked": "^1.1.0",
    "mocha": "^7.1.2",
    "mysql2": "^2.1.0",
    "nyc": "^15.0.0",
    "p-map": "^4.0.0",
    "p-props": "^4.0.0",
    "p-timeout": "^4.0.0",
    "pg": "^8.2.1",
    "pg-hstore": "^2.x",
    "rimraf": "^3.0.2",
    "semantic-release": "^17.3.0",
    "sinon": "^9.0.2",
    "sinon-chai": "^3.3.0",
    "sqlite3": "^4.2.0",
    "tedious": "8.3.0",
    "typescript": "^4.1.3"
  },
  "directories": {},
  "dist": {
    "fileCount": 125,
    "integrity": "sha512-owBt8fnzVy8E1OvyCyfCdVk7OOLyPVrBCMEf+CvRReC5oCyo+UqeXCtwaex9L6LM9ifZ1i3TG3sFeM5MgLK0CQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgEObqCRA9TVsSAnZWagAAeXQP/2JuJeXaXpjK5ToLqeVn\nVkOGcjjVCcv8eXEKmISVGeVwa35dA5Ebh0FeGXyVCKDJ5lcn1hleEm9AD4ho\nrI6uooatLKgNrIk7Kj/ZJGtgliBbrJK6hve1gti/kGJxYKhyxy2GJgarwXp7\n7poshoUF3H+mDeizKOtZ0NJXzniD8ofRQXw+vg4H3VDZAzmj3URWI2Orf5Mp\nZ3Cmv02qXKi3oGGyC2QKODP0pLFbyPsntBsswdfa48nFDWZuYNj/hCgz8Tr9\n0Hb2vyxs2/DdV52Aax/P7NEOKMgNO0YU0Mm2TbjlBZBLRyW6yWctN4f546FD\n66BHVih5Qzm8XtU3sqqr2OwSb4j6frUqWBg3s44uwNQp+xalV0/LNYrw59kA\n32D3XIfIB5ruMtEhfu3+esdU1I6dRnhuYLIVsdd2EQqCcenkhiO74ZJYCgSV\n9PFRrRwTkmptMV/QzP374/Dt33OHvb2JEBmEri45eksmpocH6hlWeHV0oMIg\nSR3sdNlWds9RsGMWOe5547HPQfPvyLc+1qgqLxgoOeCp6YTqK8KSWsTeqMnN\ntrChr1kaeQOoKhvRnGhxAP4Vptdl6fGYUISNlB4fn87BUbn2cZLwPiV2rNUl\ni3N6aNhjLjfpv//9hHx0EZAhWN4IxbmLdThcZfCiRtbCw1UCKxyLTXoYN2vx\nIOKz\r\n=qSym\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "c968a03f6fbbcda40717f73edb39fadf27b85e96",
    "tarball": "https://registry.npmjs.org/sequelize/-/sequelize-6.5.0.tgz",
    "unpackedSize": 1147357
  },
  "engines": {
    "node": ">=10.0.0"
  },
  "gitHead": "4063c2ab627ad57919d5b45cc7755f077a69fa5e",
  "homepage": "https://sequelize.org/",
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "keywords": [
    "mariadb",
    "mssql",
    "mysql",
    "nodejs",
    "object relational mapper",
    "orm",
    "postgres",
    "postgresql",
    "sqlite"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": "eslint"
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "janaameier",
      "email": "janzeh@gmail.com"
    },
    {
      "name": "durango",
      "email": "me@danieldurante.com"
    },
    {
      "name": "mickhansen",
      "email": "mick.kasper.hansen@gmail.com"
    },
    {
      "name": "sdepold",
      "email": "sascha@depold.com"
    },
    {
      "name": "felixfbecker",
      "email": "felix.b@outlook.com"
    },
    {
      "name": "sushantdhiman",
      "email": "sushantdhiman@outlook.com"
    },
    {
      "name": "eseliger",
      "email": "erikseliger@me.com"
    },
    {
      "name": "papb",
      "email": "papb1996@gmail.com"
    }
  ],
  "name": "sequelize",
  "optionalDependencies": {},
  "options": {
    "env_cmd": "-f ./test/config/.docker.env"
  },
  "peerDependenciesMeta": {
    "mariadb": {
      "optional": true
    },
    "mysql2": {
      "optional": true
    },
    "pg": {
      "optional": true
    },
    "pg-hstore": {
      "optional": true
    },
    "sqlite3": {
      "optional": true
    },
    "tedious": {
      "optional": true
    }
  },
  "publishConfig": {
    "tag": "latest"
  },
  "readme": "ERROR: No README data found!",
  "release": {
    "branches": [
      "v6"
    ],
    "verifyConditions": [
      "@semantic-release/github",
      "@semantic-release/npm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sequelize/sequelize.git"
  },
  "scripts": {
    "cover": "rimraf coverage && npm run teaser && npm run cover-integration && npm run cover-unit && npm run merge-coverage",
    "cover-integration": "cross-env COVERAGE=true nyc --reporter=lcovonly mocha -t 30000 --exit \"test/integration/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/integration.info')\"",
    "cover-unit": "cross-env COVERAGE=true nyc --reporter=lcovonly mocha -t 30000 --exit \"test/unit/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/unit.info')\"",
    "docs": "rimraf esdoc && esdoc -c docs/esdoc-config.js && cp docs/favicon.ico esdoc/favicon.ico && cp docs/ROUTER.txt esdoc/ROUTER && node docs/run-docs-transforms.js && node docs/redirects/create-redirects.js && rimraf esdoc/file esdoc/source.html",
    "lint": "eslint lib test --quiet",
    "lint-docs": "markdownlint docs",
    "merge-coverage": "lcov-result-merger \"coverage/*.info\" \"coverage/lcov.info\"",
    "semantic-release": "semantic-release",
    "setup-mssql": "env-cmd $npm_package_options_env_cmd ./scripts/setup-mssql",
    "sscce": "env-cmd $npm_package_options_env_cmd node sscce.js",
    "sscce-mariadb": "cross-env DIALECT=mariadb npm run sscce",
    "sscce-mssql": "cross-env DIALECT=mssql npm run sscce",
    "sscce-mysql": "cross-env DIALECT=mysql npm run sscce",
    "sscce-postgres": "cross-env DIALECT=postgres npm run sscce",
    "sscce-sqlite": "cross-env DIALECT=sqlite npm run sscce",
    "teaser": "node scripts/teaser",
    "test": "npm run teaser && npm run test-unit && npm run test-integration",
    "test-all": "npm run test-mariadb && npm run test-mysql && npm run test-sqlite && npm run test-postgres && npm run test-postgres-native && npm run test-mssql",
    "test-docker": "npm run test-docker-unit && npm run test-docker-integration",
    "test-docker-integration": "env-cmd $npm_package_options_env_cmd npm run test-integration",
    "test-docker-unit": "npm run test-unit",
    "test-integration": "mocha --globals setImmediate,clearImmediate --exit --check-leaks --colors -t 30000 --reporter spec \"test/integration/**/*.test.js\"",
    "test-integration-all": "npm run test-integration-mariadb && npm run test-integration-mysql && npm run test-integration-postgres && npm run test-integration-postgres-native && npm run test-integration-mssql && npm run test-integration-sqlite",
    "test-integration-mariadb": "cross-env DIALECT=mariadb npm run test-integration",
    "test-integration-mssql": "cross-env DIALECT=mssql npm run test-integration",
    "test-integration-mysql": "cross-env DIALECT=mysql npm run test-integration",
    "test-integration-postgres": "cross-env DIALECT=postgres npm run test-integration",
    "test-integration-postgres-native": "cross-env DIALECT=postgres-native npm run test-integration",
    "test-integration-sqlite": "cross-env DIALECT=sqlite npm run test-integration",
    "test-mariadb": "cross-env DIALECT=mariadb npm test",
    "test-mssql": "cross-env DIALECT=mssql npm test",
    "test-mysql": "cross-env DIALECT=mysql npm test",
    "test-pgsql": "npm run test-postgres",
    "test-postgres": "cross-env DIALECT=postgres npm test",
    "test-postgres-native": "cross-env DIALECT=postgres-native npm test",
    "test-postgresn": "npm run test-postgres-native",
    "test-sqlite": "cross-env DIALECT=sqlite npm test",
    "test-typings": "tsc -b types/tsconfig.json && tsc -b types/test/tsconfig.json",
    "test-unit": "mocha --globals setImmediate,clearImmediate --exit --check-leaks --colors -t 30000 --reporter spec \"test/unit/**/*.js\"",
    "test-unit-all": "npm run test-unit-mariadb && npm run test-unit-mysql && npm run test-unit-postgres && npm run test-unit-postgres-native && npm run test-unit-mssql && npm run test-unit-sqlite",
    "test-unit-mariadb": "cross-env DIALECT=mariadb npm run test-unit",
    "test-unit-mssql": "cross-env DIALECT=mssql npm run test-unit",
    "test-unit-mysql": "cross-env DIALECT=mysql npm run test-unit",
    "test-unit-postgres": "cross-env DIALECT=postgres npm run test-unit",
    "test-unit-postgres-native": "cross-env DIALECT=postgres-native npm run test-unit",
    "test-unit-sqlite": "cross-env DIALECT=sqlite npm run test-unit"
  },
  "types": "types",
  "version": "6.5.0"
}
